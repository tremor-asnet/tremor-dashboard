import { fireEvent, render } from "@testing-library/react";
import ClientRootLayout, { metadata } from "./ClientRootLayout";
import { ThemeContext, ThemeProvider } from "./context/theme";

describe("ClientRootLayout", () => {
  it("Should have correct title", () => {
    expect(metadata.title).toBe("Tremor Dashboard");
  });

  it("Should have correct description", () => {
    expect(metadata.description).toBe(
      "Tremor Dashboard generated by create next app",
    );
  });

  it("Should be correct with theme", () => {
    const { getByTestId, container } = render(
      <ThemeProvider>
        <ThemeContext.Consumer>
          {({ isDarkTheme, toggleTheme }) => (
            <ClientRootLayout>
              <button
                data-testid="toggle-theme"
                onClick={() =>
                  toggleTheme()
                }>{`isDarkTheme to ${isDarkTheme}`}</button>
            </ClientRootLayout>
          )}
        </ThemeContext.Consumer>
      </ThemeProvider>,
    );
    const themeButton = getByTestId("toggle-theme");

    fireEvent.click(themeButton);
    expect(themeButton.textContent).toBe("isDarkTheme to true");

    fireEvent.click(themeButton);
    expect(themeButton.textContent).toBe("isDarkTheme to false");

    expect(container).toMatchSnapshot();
  });
});
